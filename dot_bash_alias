# -*- ft: bash -*-
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"
[ -x ~/bin/fzf ] && alias fzf='~/bin/fzf'
alias L='less -R --use-color' # most?
alias G='grep --color=always -i'
alias ls='ls --color=auto'
alias lls='ls -lAGh1vX --group-directories-first --color=always | L'
alias lastCommand='history 2 | head -1 | awk \!\(\$1\=\"\"\)'
alias docker-top='ctop'
alias kg='kubectl neat get --'
alias kl='stern'

if command -v bpytop >/dev/null 2>&1; then
    alias htop='bpytop'; fi

# chezmoi
alias chezmoi-pull='chezmoi git pull -- --autostash --rebase && chezmoi diff' # TODO: add prompt to autoapply
function chezmoi-new-ubuntu {
    echo curl -sSL https://raw.githubusercontent.com/junegunn/fzf/refs/heads/master/install \| bash
    echo sh -c \"\$\(curl -fsLS get.chezmoi.io\)\" -- init --apply yunake
    echo 'sudo apt install -y bpytop tmux ripgrep exuberant-ctags'
}
function chezmoi-new-ubuntu-broken-escaping {
    ssh "$@" bash -c 'sh -c '"$(curl -fsLS get.chezmoi.io)" -- init --apply https://github.com/yunake/dotfiles.git''
}

# TODO: modify it so it opens PDFs, or white custom script like ~/bin/rfv
# better yet, `mv rfv search` and make it open most files in vim, pdf via `open`, or patch rga-fzf / ripgrep-all
alias search_pdf='rga-fzf'

# open files in directory in vim. `:qa` to quit
function vimd {
    #fd "$@" -t f -p0 | xargs -0o vim
    rg --files --sortr=modified -0 | xargs -0o vim
}

function rgd {
    rg --json -C 2 "$@" | delta
}

# preserves last occurance
function dedup {
   tac "$@" | awk '! x[$0]++' | tac
}
# remove "column", leaves IFS behind
function rmcol {
    awk "!(\$$1=\"\")"
}

function taillog {
    tail -f "$@" | bat --paging=never -l log
}


# This script was automatically generated by the broot program
# More information can be found in https://github.com/Canop/broot
# This function starts broot and executes the command
# it produces, if any.
# It's needed because some shell commands, like `cd`,
# have no useful effect if executed in a subshell.
function br {
    local cmd cmd_file code
    cmd_file=$(mktemp)
    if broot --outcmd "$cmd_file" "$@"; then
        cmd=$(<"$cmd_file")
        command rm -f "$cmd_file"
        eval "$cmd"
    else
        code=$?
        command rm -f "$cmd_file"
        return "$code"
    fi
}

